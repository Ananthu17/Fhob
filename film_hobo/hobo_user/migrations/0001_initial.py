# Generated by Django 3.1.7 on 2021-03-31 03:09

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='middle name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('imdb_url', models.URLField(blank=True, null=True, verbose_name='IMDB URL')),
                ('membership', models.CharField(choices=[('HOB', 'Hobo'), ('IND', 'Indie'), ('PRO', 'Pro'), ('COM', 'Production Company')], default='HOB', max_length=150, verbose_name='Membership Type')),
                ('acting_skill', models.FloatField(blank=True, null=True, verbose_name='Acting Skill')),
                ('directional_skill', models.FloatField(blank=True, null=True, verbose_name='Directional Skill')),
                ('writing_skill', models.FloatField(blank=True, null=True, verbose_name='Writing Skill')),
                ('production_skill', models.FloatField(blank=True, null=True, verbose_name='Production Skill')),
                ('gender', models.CharField(blank=True, choices=[('MAL', 'Male'), ('FEM', 'Female'), ('OTH', 'Other')], max_length=150, null=True, verbose_name='Gender')),
                ('feet', models.IntegerField(blank=True, null=True, verbose_name='Feet')),
                ('inch', models.IntegerField(blank=True, null=True, verbose_name='Inches')),
                ('lbs', models.IntegerField(blank=True, null=True, verbose_name='Lbs')),
                ('start_age', models.IntegerField(blank=True, null=True, verbose_name='From')),
                ('stop_age', models.IntegerField(blank=True, null=True, verbose_name='To')),
                ('physique', models.CharField(blank=True, choices=[('ATH', 'Athletic')], max_length=150, null=True, verbose_name='Physique')),
                ('hair_color', models.CharField(blank=True, choices=[('BLA', 'Black')], max_length=150, null=True, verbose_name='Hair Color')),
                ('hair_length', models.CharField(blank=True, choices=[('BUZ', 'Buzz Cut')], max_length=150, null=True, verbose_name='Hair Length')),
                ('eyes', models.CharField(blank=True, choices=[('BRO', 'Brown')], max_length=150, null=True, verbose_name='Eyes')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='AthleticSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athletic_skill', models.CharField(blank=True, max_length=150, null=True, verbose_name='Athletic Skills')),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='EthnicAppearance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ethnic_appearance', models.CharField(blank=True, max_length=150, null=True, verbose_name='Ethnic Appearance')),
            ],
        ),
        migrations.CreateModel(
            name='Makeup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('makeup', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producer', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('format', models.CharField(blank=True, choices=[('SCH', 'Scene'), ('SHO', 'Shorts')], max_length=150, null=True, verbose_name='Format Type')),
                ('genre', models.CharField(blank=True, choices=[('ACT', 'Action'), ('ADV', 'Adventure'), ('ANI', 'Animation'), ('BIO', 'Biography'), ('COM', 'Comedy'), ('CRI', 'Crime'), ('DOC', 'Documentary'), ('DRA', 'Drama'), ('FAM', 'Family'), ('FAN', 'Fantasy'), ('FIL', 'Film Noir'), ('GAM', 'Game Show'), ('HIS', 'History'), ('HOR', 'Horror'), ('LGB', 'LGBTQ'), ('MIL', 'Military'), ('MUS', 'Musical'), ('MYS', 'Mystery'), ('REA', 'Reality TV'), ('ROM', 'Romance'), ('SCI', 'Science Fiction'), ('SPO', 'Sport'), ('TAL', 'Talk Show'), ('THR', 'Thriller'), ('WES', 'Western')], max_length=150, null=True, verbose_name='Genre Type')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Rating')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.actor', verbose_name='Actor')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.director', verbose_name='Director')),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.editor', verbose_name='Editor')),
                ('makeup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.makeup', verbose_name='Makeup')),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.producer', verbose_name='Producer')),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_code', models.CharField(max_length=1000)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writer', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likes', models.IntegerField(blank=True, null=True, verbose_name='Likes')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.project', verbose_name='Project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='writer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.writer', verbose_name='Writer'),
        ),
        migrations.CreateModel(
            name='EthnicAppearanceInline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('ethnic_appearance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.ethnicappearance')),
            ],
            options={
                'verbose_name': 'Ethnic Appearance',
                'verbose_name_plural': 'EthnicAppearances',
            },
        ),
        migrations.CreateModel(
            name='AthleticSkillInline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athletic_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobo_user.athleticskill')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Athletic Skill',
                'verbose_name_plural': 'Athletic Skills',
            },
        ),
    ]
